service: cors-proxy

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-apigw-binary

custom: 
  apigwBinary:
    types:
      - '*/*'

mightyVars: ${file(serverless.vars.yml)}

provider:
  name: aws
  runtime: nodejs10.x
  usagePlan: ${self:mightyVars.usagePlan}

functions:
  proxy:
    handler: handler.proxy
    environment:
      TIMEOUT: ${self:mightyVars.proxyTimeout, ''}
      CORS_ORIGIN: ${self:mightyVars.cors.origin, ''}
      CORS_CREDENTIALS: ${self:mightyVars.cors.allowCredentials, ''}
    events:
      - http:
          path: ''
          method: get
          cors: ${self:mightyVars.cors, ''}
      - http:
          path: ''
          method: post
          cors: ${self:mightyVars.cors, ''}
      - http:
          path: ''
          method: head
          cors: ${self:mightyVars.cors, ''}
      - http:
          path: ''
          method: put
          cors: ${self:mightyVars.cors, ''}
      - http:
          path: ''
          method: patch
          cors: ${self:mightyVars.cors, ''}
      - http:
          path: ''
          method: delete
          cors: ${self:mightyVars.cors, ''}
